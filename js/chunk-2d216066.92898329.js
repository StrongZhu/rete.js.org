(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d216066"],{c168:function(n,t,o){"use strict";o.r(t);var e=function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("div",{directives:[{name:"t9n",rawName:"v-t9n.deep",value:"docs",expression:"'docs'",modifiers:{deep:!0}}],staticClass:"plugin"},[o("Code",{attrs:{source:"install"}}),o("p",[n._v("Внутри конструктора компонента")]),o("Code",{attrs:{source:"contruct"}}),n._m(0),o("Code",{attrs:{source:"worker"}})],1)},s=[function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("p",[o("i",[n._v("worker ")]),o("span",[n._v("должен выглядеть следующим образом")])])}],i=o("2877"),u=function(n){n.options.code||(n.options.code={}),n.options.code["install"]="import TaskPlugin from 'rete-task-plugin';\n\neditor.use(TaskPlugin);"},a=u,c=function(n){n.options.code||(n.options.code={}),n.options.code["contruct"]="this.task = {\n  outputs: {num1: 'option', num2: 'output'},\n  init(task) {  // вызывается при инициализации всех тасков (при engine.process())\n    task.run('any data');\n    task.reset();\n  }\n}"},r=c,d=function(n){n.options.code||(n.options.code={}),n.options.code["worker"]="worker(node, inputs, data) { // data это 'any data' из run()\n  console.log('Keydown event', node.id, data);\n  // inputs['inp_num1']\n  this.closed = ['num1']; // предотвращает переход к выходному таску, который соединен с текущим через первый 'option' сокет\n  return {num2: data} // возвращает выходные данные\n}"},p=d,l={},f=Object(i["a"])(l,e,s,!1,null,null,null);"function"===typeof a&&a(f),"function"===typeof r&&r(f),"function"===typeof p&&p(f);t["default"]=f.exports}}]);
//# sourceMappingURL=chunk-2d216066.92898329.js.map